package model.AppModule;

import model.AppModule.common.AppModuleAM;

import model.Views.MembersVOImpl;

import model.Views.MembersVORowImpl;

import oracle.adf.share.ADFContext;

import oracle.jbo.NameValuePairs;
import oracle.jbo.Row;
import oracle.jbo.ViewObject;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Feb 19 20:59:27 AST 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppModuleAMImpl extends ApplicationModuleImpl implements AppModuleAM {
    /**
     * This is the default constructor (do not remove).
     */
    public AppModuleAMImpl() {
    }

    /**
     * Container's getter for EmpData.
     * @return EmpData
     */
    public ViewObjectImpl getEmpData() {
        return (ViewObjectImpl) findViewObject("EmpData");
    }

    /**
     * Container's getter for Members.
     * @return Members
     */
    public MembersVOImpl getMembers() {
        return (MembersVOImpl) findViewObject("Members");
    }

    public void createNewMemeberAM(String fName, String LName, oracle.jbo.domain.Number Mobile, String email,
                                   String Gender, String SecQues, String QuesAnswer, String Pass, String userName) {
        System.out.println("createNewMemeberAM");
        ViewObject memVo = getMembers();
        Row newRow = memVo.createRow();
        System.out.println("After Creating Row");
        newRow.setAttribute("FirstName", fName);
        newRow.setAttribute("LastName", LName);
        newRow.setAttribute("Mobile", Mobile);
        newRow.setAttribute("Email", email);
        newRow.setAttribute("Gender", Gender);
        newRow.setAttribute("SecurityQuestion", SecQues);
        newRow.setAttribute("QuestionAnswer", QuesAnswer);
        newRow.setAttribute("Password", Pass);
        newRow.setAttribute("User1", userName);
        System.out.println("Finishing Row Addititon");

        memVo.insertRow(newRow);
        System.out.println("Before Commit");

        getDBTransaction().commit();
    }

    public void createNewMemeberVROW(String fName, String LName, oracle.jbo.domain.Number Mobile, String email,
                                     String Gender, String SecQues, String QuesAnswer, String Pass, String userName) {
        System.out.println("createNewMemeberVROW");

        MembersVOImpl memVo = getMembers();
        MembersVORowImpl memRow = (MembersVORowImpl) memVo.createRow();
        System.out.println("Start Row Creation");

        memRow.setFirstName(fName);
        memRow.setLastName(LName);
        memRow.setMobile(Mobile);
        memRow.setEmail(email);
        memRow.setGender(Gender);
        memRow.setSecurityQuestion(SecQues);
        memRow.setQuestionAnswer(QuesAnswer);
        memRow.setPassword(Pass);
        memRow.setUser1(userName);
        memVo.insertRow(memRow);
        System.out.println("Finishing Row Addititon");

        System.out.println("Before Commit");

        getDBTransaction().commit();
        
    }

    public void createAndInitRowNewMemeber(String fName, String LName, oracle.jbo.domain.Number Mobile, String email,
                                           String Gender, String SecQues, String QuesAnswer, String Pass, String userName) {
        //I prefer using second method  createAndInitRow because it sets default values of attributes in
        //view object but first method insertRow doesn't do this.
        System.out.println("createAndInitRowNewMemeber");

        ViewObjectImpl memVo = getMembers();
        NameValuePairs nvp = new NameValuePairs();
        System.out.println("NameValuePairs");

        nvp.setAttribute("FirstName", fName);
        nvp.setAttribute("LastName", LName);
        nvp.setAttribute("Mobile", Mobile);
        nvp.setAttribute("Email", email);
        nvp.setAttribute("Gender", Gender);
        nvp.setAttribute("SecurityQuestion", SecQues);
        nvp.setAttribute("QuestionAnswer", QuesAnswer);
        nvp.setAttribute("Password", Pass);
        nvp.setAttribute("User1", userName);
        System.out.println("After Filling Data");

        memVo.createAndInitRow(nvp);
        System.out.println("After Creating the Row & Before Commit");

        getDBTransaction().commit();
    }


    private void setGlobalVariables(Row row) {
        ADFContext ctx = ADFContext.getCurrent();
        ctx.getSessionScope().put("userGlobal", row.getAttribute("FirstName"));
        ctx.getSessionScope().put("emailGlobal", row.getAttribute("Email"));
        ctx.getSessionScope().put("MobileGolbal", row.getAttribute("PhoneNumber"));
        ctx.getSessionScope().put("depGlobal", row.getAttribute("DepartmentId"));

    }


    /**
     * Container's getter for Departments1.
     * @return Departments1
     */
    public ViewObjectImpl getDepartments1() {
        return (ViewObjectImpl) findViewObject("Departments1");
    }

    /**
     * Container's getter for Employees1.
     * @return Employees1
     */
    public ViewObjectImpl getEmployees1() {
        return (ViewObjectImpl) findViewObject("Employees1");
    }

    /**
     * Container's getter for EmpDeptFkVL1.
     * @return EmpDeptFkVL1
     */
    public ViewLinkImpl getEmpDeptFkVL1() {
        return (ViewLinkImpl) findViewLink("EmpDeptFkVL1");
    }

    /**
     * Container's getter for Countries1.
     * @return Countries1
     */
    public ViewObjectImpl getCountriesToPassParamsInTFs() {
        return (ViewObjectImpl) findViewObject("CountriesToPassParamsInTFs");
    }
}

