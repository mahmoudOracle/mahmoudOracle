package model.Entities;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Feb 19 23:15:52 AST 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MembersEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        FirstName,
        LastName,
        Mobile,
        Email,
        Gender,
        SecurityQuestion,
        QuestionAnswer,
        Password,
        User1,
        Id;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int FIRSTNAME = AttributesEnum.FirstName.index();
    public static final int LASTNAME = AttributesEnum.LastName.index();
    public static final int MOBILE = AttributesEnum.Mobile.index();
    public static final int EMAIL = AttributesEnum.Email.index();
    public static final int GENDER = AttributesEnum.Gender.index();
    public static final int SECURITYQUESTION = AttributesEnum.SecurityQuestion.index();
    public static final int QUESTIONANSWER = AttributesEnum.QuestionAnswer.index();
    public static final int PASSWORD = AttributesEnum.Password.index();
    public static final int USER1 = AttributesEnum.User1.index();
    public static final int ID = AttributesEnum.Id.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MembersEOImpl() {
    }

    /**
     * Gets the attribute value for FirstName, using the alias name FirstName.
     * @return the value of FirstName
     */
    public String getFirstName() {
        return (String) getAttributeInternal(FIRSTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for FirstName.
     * @param value value to set the FirstName
     */
    public void setFirstName(String value) {
        setAttributeInternal(FIRSTNAME, value);
    }

    /**
     * Gets the attribute value for LastName, using the alias name LastName.
     * @return the value of LastName
     */
    public String getLastName() {
        return (String) getAttributeInternal(LASTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastName.
     * @param value value to set the LastName
     */
    public void setLastName(String value) {
        setAttributeInternal(LASTNAME, value);
    }

    /**
     * Gets the attribute value for Mobile, using the alias name Mobile.
     * @return the value of Mobile
     */
    public Number getMobile() {
        return (Number) getAttributeInternal(MOBILE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Mobile.
     * @param value value to set the Mobile
     */
    public void setMobile(Number value) {
        setAttributeInternal(MOBILE, value);
    }

    /**
     * Gets the attribute value for Email, using the alias name Email.
     * @return the value of Email
     */
    public String getEmail() {
        return (String) getAttributeInternal(EMAIL);
    }

    /**
     * Sets <code>value</code> as the attribute value for Email.
     * @param value value to set the Email
     */
    public void setEmail(String value) {
        setAttributeInternal(EMAIL, value);
    }

    /**
     * Gets the attribute value for Gender, using the alias name Gender.
     * @return the value of Gender
     */
    public String getGender() {
        return (String) getAttributeInternal(GENDER);
    }

    /**
     * Sets <code>value</code> as the attribute value for Gender.
     * @param value value to set the Gender
     */
    public void setGender(String value) {
        setAttributeInternal(GENDER, value);
    }

    /**
     * Gets the attribute value for SecurityQuestion, using the alias name SecurityQuestion.
     * @return the value of SecurityQuestion
     */
    public String getSecurityQuestion() {
        return (String) getAttributeInternal(SECURITYQUESTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for SecurityQuestion.
     * @param value value to set the SecurityQuestion
     */
    public void setSecurityQuestion(String value) {
        setAttributeInternal(SECURITYQUESTION, value);
    }

    /**
     * Gets the attribute value for QuestionAnswer, using the alias name QuestionAnswer.
     * @return the value of QuestionAnswer
     */
    public String getQuestionAnswer() {
        return (String) getAttributeInternal(QUESTIONANSWER);
    }

    /**
     * Sets <code>value</code> as the attribute value for QuestionAnswer.
     * @param value value to set the QuestionAnswer
     */
    public void setQuestionAnswer(String value) {
        setAttributeInternal(QUESTIONANSWER, value);
    }

    /**
     * Gets the attribute value for Password, using the alias name Password.
     * @return the value of Password
     */
    public String getPassword() {
        return (String) getAttributeInternal(PASSWORD);
    }

    /**
     * Sets <code>value</code> as the attribute value for Password.
     * @param value value to set the Password
     */
    public void setPassword(String value) {
        setAttributeInternal(PASSWORD, value);
    }

    /**
     * Gets the attribute value for User1, using the alias name User1.
     * @return the value of User1
     */
    public String getUser1() {
        return (String) getAttributeInternal(USER1);
    }

    /**
     * Sets <code>value</code> as the attribute value for User1.
     * @param value value to set the User1
     */
    public void setUser1(String value) {
        setAttributeInternal(USER1, value);
    }

    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the value of Id
     */
    public Number getId() {
        return (Number) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Id.
     * @param value value to set the Id
     */
    public void setId(Number value) {
        setAttributeInternal(ID, value);
    }

    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number id) {
        return new Key(new Object[] { id });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.Entities.MembersEO");
    }


    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        SequenceImpl seq = new SequenceImpl("MEMBER_SEQ", getDBTransaction());
        setId(seq.getSequenceNumber());
    }
}

